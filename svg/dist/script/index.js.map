{
  "version": 3,
  "sources": ["../../src/svg/src/index.js", "../../src/svg/build/index.js"],
  "sourcesContent": ["const NAME         = 'gySVGObject';\r\nconst NS           = 'http://www.w3.org/2000/svg';\r\nconst SVG          = 'svg';\r\nconst OBJECT       = 'object';\r\nconst FUNCTION     = 'function';\r\nconst STRING       = 'string';\r\nconst BOOLEAN      = 'boolean';\r\nconst UNDEFINED    = 'undefined';\r\nconst SYMBOL       = 'symbol';\r\nconst PATH         = 'path';\r\nconst ANIMATE      = 'animate';\r\nconst FILL         = 'none';\r\nconst FREEZE       = 'freeze';\r\nconst D            = 'd';\r\nconst TRANSFORM    = 'transform';\r\nconst ROTATE       = 'rotate';\r\nconst TRANSLATE    = 'translate';\r\nconst OFFSET       = 'offset';\r\nconst INHERIT      = 'inherit';\r\nconst FINISHED     = 'finished';\r\nconst EMPTY_STRING = '';\r\nconst COMA         = ',';\r\nconst DEG_TYPES    = [ROTATE, 'skewX', 'skewY'];\r\nconst DEG          = 'deg';\r\nconst PX           = 'px';\r\nconst MS           = 'ms';\r\nconst cache        = new WeakMap();\r\nconst readonlyProp = new Set();\r\n\r\n/**\r\n * Reduce Motion flag\r\n * @type {boolean}\r\n */\r\nlet reduceMotion = false;\r\nif (window.matchMedia) {\r\n  const mediaQuery = window.matchMedia('(prefers-reduced-motion: reduce)');\r\n  reduceMotion     = mediaQuery.matches;\r\n  mediaQuery.addEventListener('change', () => {\r\n    reduceMotion = mediaQuery.matches;\r\n  });\r\n}\r\n\r\n/**\r\n * Check if is direct access member\r\n * @param {string} prop\r\n * @returns {boolean}\r\n */\r\nconst directAccess = (prop) => 'el' === prop || prop[0] === '_' || isType(prop, SYMBOL);\r\n\r\n/**\r\n * Check the type\r\n * @param {object} o\r\n * @param {string} t\r\n * @returns {boolean}\r\n */\r\nconst isType = (o, t) => typeof o === t;\r\n\r\n/**\r\n * Check the instance\r\n * @param {object} o\r\n * @param {object} p\r\n * @returns {boolean}\r\n */\r\nconst is = (o, p) => o instanceof p;\r\n\r\n\r\n/**\r\n * Create a random id\r\n * @returns {string}\r\n */\r\nconst randomId = () => NAME + Math.random().toString(32).substring(2);\r\n\r\n/**\r\n * Check if the element is wrapped or not\r\n * @param {*} el\r\n * @returns {boolean}\r\n */\r\nconst isWrapped = (el) => isType(el, OBJECT) && el !== null && el[Symbol.toStringTag] === NAME;\r\n\r\n/**\r\n * Create a new element\r\n * @param tag\r\n * @returns {gySVGObject}\r\n */\r\nconst create = (tag) => wrapper(document.createElementNS(NS, tag));\r\n\r\n/**\r\n * Create, wrap or return the wrapped object\r\n * @param {gySVGObject|object|string} tag\r\n * @returns {gySVGObject|object}\r\n */\r\nconst createWrap = (tag) =>\r\n  isType(tag, STRING) ?\r\n    create(tag) :\r\n    isType(tag, OBJECT) && tag !== null ?\r\n      isWrapped(tag) ?\r\n        tag :\r\n        wrapper(tag) :\r\n      tag;\r\n\r\n/**\r\n * Return the original method name for an alias\r\n * @param {string} prop\r\n * @returns {string}\r\n */\r\nconst alias = (prop) => ({\r\n  content : 'innerHTML',\r\n  source  : 'outerHTML',\r\n  parent  : 'parentElement',\r\n  next    : 'nextElementSibling',\r\n  previous: 'previousElementSibling'\r\n})[prop] || prop;\r\n\r\n\r\n/**\r\n * Convert property name to attribute with hyphens\r\n * @param {string} name\r\n * @returns {string}\r\n */\r\nconst toHyphen = name => name.replace(/([A-Z])/g, '-$1').toLowerCase();\r\n\r\n/**\r\n * @typedef {Object} gySVGObject\r\n */\r\n\r\n/**\r\n * GYSVGObject\r\n */\r\nclass GYSVGObject {\r\n\r\n  constructor (element) {\r\n    this._el   = element;\r\n    this.gySVG = gySVG;\r\n  }\r\n\r\n  get [Symbol.toStringTag] () {\r\n    return NAME;\r\n  }\r\n\r\n  /**\r\n   * el\r\n   * @type {Object}\r\n   */\r\n  get el () {\r\n    return this._el;\r\n  }\r\n\r\n  /**\r\n   * @param {gySVGObject|Object|string} tag\r\n   * @returns {gySVGObject}\r\n   */\r\n  add (tag) {\r\n    let r = createWrap(tag);\r\n    if (r) {\r\n      this._el.appendChild(r._el);\r\n    }\r\n    return r;\r\n  }\r\n\r\n  /**\r\n   * @param {gySVGObject|Object|string} tag\r\n   * @returns {gySVGObject}\r\n   */\r\n  addBefore (tag) {\r\n    let r = createWrap(tag);\r\n    if (r) {\r\n      this._el.insertBefore(r._el, this._el.firstChild || null);\r\n    }\r\n    return r;\r\n  }\r\n\r\n  /**\r\n   * @param {string|Object} tag\r\n   * @returns {gySVGObject}\r\n   */\r\n  attachTo (tag) {\r\n    const r = isType(tag, OBJECT) ?\r\n      (isWrapped(tag) ?\r\n          tag._el :\r\n          tag\r\n      ) :\r\n      document.querySelector(tag);\r\n    r.appendChild(this._el);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * gySVGObject.id()\r\n   * @param {string} [value]\r\n   * @returns {string|gySVGObject}\r\n   */\r\n  id (value) {\r\n    if (!value) {\r\n      return this._el.id || (this._el.id = randomId());\r\n    }\r\n    this._el.setAttribute('id', value);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * gySVGObject.ref()\r\n   * @returns {string}\r\n   */\r\n  ref () {\r\n    return `#${this.id()}`;\r\n  }\r\n\r\n  /**\r\n   * gySVGObject.url()\r\n   * @returns {string}\r\n   */\r\n  url () {\r\n    return `url(${this.ref()})`;\r\n  }\r\n\r\n  /**\r\n   * @param {object|array<object>} keyframes\r\n   * @param {number|object} [options]\r\n   * @param {function|null} [startCallback]\r\n   * @param {function|null} [endCallback]\r\n   * @return {gySVGObject}\r\n   * Notice: the original animateTo method is overwriting for this plugin\r\n   */\r\n  animateTo (keyframes, options = {duration: 200}, startCallback = null, endCallback = null) {\r\n\r\n    /**\r\n     * Fixed and configure default values for .animateTo() options\r\n     * @param {object} opts\r\n     * @returns {object}\r\n     */\r\n    const normalizeOptions = (opts) => {\r\n      const normalizedConfig = isType(opts, OBJECT) ? Object.assign({}, opts) : {duration: opts};\r\n      if (reduceMotion) {\r\n        normalizedConfig.duration = 0;\r\n      }\r\n      normalizedConfig.fill = FILL;\r\n      return normalizedConfig;\r\n    }\r\n\r\n    /**\r\n     * Transform and configure default values for .animate() keyframes. Detect unsupported attributes.\r\n     * @param {object|[{}]} originalKeyframes\r\n     * @returns {[{}]}\r\n     */\r\n    const normalizeKeyframes = (originalKeyframes) => {\r\n      originalKeyframes     = is(originalKeyframes, Array) ? originalKeyframes : [originalKeyframes];\r\n      const computedStyle   = window.getComputedStyle(this._el);\r\n      const normalizeFrames = [];\r\n      const alternativeKeys = new Set();\r\n      for (let keyframe of originalKeyframes) {\r\n        const normalized = Object.assign({}, keyframe);\r\n        for (let key in normalized) {\r\n          if (!(key in computedStyle)) {\r\n            alternativeKeys.add(key);\r\n          } else if (key === D) {\r\n            normalized.d = `${PATH}(\"${normalized.d}\")`\r\n          } else if (key === TRANSFORM) {\r\n            normalized.transform = transform(normalized.transform)\r\n          }\r\n        }\r\n        normalizeFrames.push(normalized);\r\n      }\r\n      addAlternatives(alternativeKeys, normalizeFrames);\r\n      return normalizeFrames;\r\n    }\r\n\r\n    const alternatives    = []\r\n    /**\r\n     * create SMIL animate as alternative\r\n     * @param {Set} keys\r\n     * @param {[{}]} normalizeFrames\r\n     */\r\n    const addAlternatives = (keys, normalizeFrames) => {\r\n      if (keys.size) {\r\n        const computedFrames = new KeyframeEffect(null, normalizeFrames).getKeyframes();\r\n        const initialTime    = this.closest(SVG).getCurrentTime() * 1000;\r\n        for (let key of keys) {\r\n          const altAnimate = gySVG(ANIMATE)\r\n            .attributeName(key)\r\n            .dur(config.duration + MS)\r\n            .begin((0 | initialTime + (options.delay || 0)) + MS)\r\n            .fill(FREEZE);\r\n          if (normalizeFrames.length === 1) {\r\n            altAnimate.to(normalizeFrames[0][key]);\r\n          } else {\r\n            const keyTimes = [];\r\n            const values   = [];\r\n            for (let n in computedFrames) {\r\n              const frame = computedFrames[n];\r\n              if (key in normalizeFrames[n]) {\r\n                keyTimes.push(frame.computedOffset);\r\n                values.push(normalizeFrames[n][key]);\r\n              }\r\n            }\r\n            if (keyTimes[0] !== 0) {\r\n              keyTimes.unshift(0);\r\n              values.unshift(this[key]() || INHERIT);\r\n            }\r\n            if (keyTimes[keyTimes.length - 1] !== 1) {\r\n              keyTimes.push(1);\r\n              values.push(this[key]() || INHERIT);\r\n            }\r\n            altAnimate.keyTimes(keyTimes.join(';')).values(values.join(';'));\r\n          }\r\n          alternatives.push(altAnimate);\r\n          altAnimate.attachTo(this)\r\n        }\r\n      }\r\n    };\r\n\r\n    /**\r\n     * Normalize a transform property\r\n     * @param {object|string} property\r\n     * @returns {string|*}\r\n     */\r\n    const transform = (property) => {\r\n      if (isType(property, STRING)) {\r\n        property = JSON.parse('{' +\r\n                              property\r\n                                .replace(/\\s*\\(\\s*/g, ':[')\r\n                                .replace(/\\s*\\)\\s*/g, '],')\r\n                                .split(/\\s*,\\s*|\\s.*/).join(',')\r\n                                .replace(/(\\w+):/g, '\"$1\":')\r\n                                .replace(/,$/, '')\r\n                              + '}');\r\n      }\r\n      let result = EMPTY_STRING;\r\n      for (let key in property) {\r\n        if (key === ROTATE) {\r\n          const values = transformValue(property[key]);\r\n          if (values.length > 1) {\r\n            result += `${TRANSLATE}(${values[1]}${PX},${values[2]}${PX}) `\r\n          }\r\n          result += `${key}(${values[0]}${transformUnit(key)}) `\r\n          if (values.length > 1) {\r\n            result += `${TRANSLATE}(-${values[1]}${PX},-${values[2]}${PX}) `\r\n          }\r\n        } else {\r\n          result += `${key}(${transformValue(property[key]).map(v => v + transformUnit(key)).join(COMA)}) `\r\n        }\r\n      }\r\n      return result;\r\n    }\r\n\r\n    /**\r\n     * Create a normalized transform value array\r\n     * @param {*} value\r\n     * @returns {[]}\r\n     */\r\n    const transformValue = (value) => (is(value, Array) ? value : String(value).split(/\\s+|,/));\r\n\r\n    /**\r\n     * Return the transform value\r\n     * @param {string} type\r\n     * @returns {string}\r\n     */\r\n    const transformUnit = (type) => DEG_TYPES.includes(type) ? DEG : type === TRANSLATE ? PX : EMPTY_STRING;\r\n\r\n    /**\r\n     * Convert to valida attribute value\r\n     * @param {string|*} value\r\n     * @returns {string|*}\r\n     */\r\n    const value2attribute = (value) =>\r\n      typeof value === 'string' ?\r\n        value.replace(/(deg)|(px)/g, EMPTY_STRING).trim() :\r\n        value\r\n\r\n    /**\r\n     * Transform d CSS property to valid d attribute format\r\n     * @param {string} d\r\n     * @returns {string}\r\n     */\r\n    const d2attribute = (d) => d\r\n      .replace(/(path\\s*\\(\\s*[\"'])|([\"']\\s*\\)\\s*$)/g, EMPTY_STRING)\r\n      .trim()\r\n      .replace(/([a-zA-Z])\\s*/g, '$1')\r\n      .replace(/\\s+/g, COMA);\r\n\r\n    // Main code\r\n    const config    = normalizeOptions(options);\r\n    const frames    = normalizeKeyframes(keyframes);\r\n    const animation = this._el.animate(frames, config);\r\n\r\n    animation.ready.then(() => isType(startCallback, FUNCTION) && startCallback.call(this, animation));\r\n\r\n    animation.finished.then(() => {\r\n      const lastAttributes = frames[frames.length - 1];\r\n      for (let attr in lastAttributes) {\r\n        const attrKey = toHyphen(attr);\r\n        if (/^text-/.test(attrKey)) {\r\n          this._el.style[attr] = lastAttributes[attr];\r\n        } else if (attr !== OFFSET && attr in lastAttributes) {\r\n          this._el.setAttribute(\r\n            attrKey,\r\n            attrKey === 'd' ?\r\n              d2attribute(lastAttributes[attr]) :\r\n              value2attribute(lastAttributes[attr]));\r\n        }\r\n      }\r\n      alternatives.forEach(altAnimate => {\r\n        altAnimate[FINISHED](true);\r\n        const animates = this._el.querySelectorAll(ANIMATE);\r\n        const finished = this._el.querySelectorAll(`${ANIMATE}[${FINISHED}]`);\r\n        if (animates.length === finished.length) {\r\n          animates.forEach(a => a.remove())\r\n        }\r\n      });\r\n      isType(endCallback, FUNCTION) && endCallback.call(this, animation);\r\n    });\r\n\r\n    return this;\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * @param element\r\n * @returns {gySVGObject}\r\n */\r\nconst wrapper = (element) => {\r\n  if (!isType(element, OBJECT) || element === null) {\r\n    return null;\r\n  }\r\n  if (cache.has(element)) {\r\n    return cache.get(element);\r\n  }\r\n  const proxy = new Proxy(\r\n    new GYSVGObject(element),\r\n    // Handler\r\n    {\r\n      get (wrapped, prop) {\r\n        // Symbol return\r\n        if (directAccess(prop)) {\r\n          return wrapped[prop];\r\n        }\r\n        // Return the wrapper method\r\n        if (!isType(wrapped[prop], UNDEFINED)) {\r\n          return (...args) =>\r\n            pluginCallback(proxy, prop, args) ||\r\n            wrapped[prop].call(proxy, ...args);\r\n        }\r\n        // Special case <path d=\"\"></path>\r\n        if (prop === D && element.tagName.toLowerCase() === PATH) {\r\n          let content  = EMPTY_STRING;\r\n          const dProxy = new Proxy(\r\n            (arg) =>\r\n              pluginCallback(proxy, prop, [arg]) ||\r\n              arg ? element.setAttribute(D, arg) || proxy : element.getAttribute(D),\r\n            {\r\n              get (_target, command) {\r\n                return (...args) => {\r\n                  content += pluginCallbackPathD(proxy, command, args) || `${command}${args.join(COMA)}`;\r\n                  element.setAttribute(prop, content);\r\n                  return dProxy;\r\n                };\r\n              }\r\n            }\r\n          );\r\n          return dProxy;\r\n        }\r\n        prop = alias(prop);\r\n        // Return the element method\r\n        if (isType(element[prop], FUNCTION)) {\r\n          return (...args) => {\r\n            const result =\r\n                    pluginCallback(proxy, prop, args) ||\r\n                    element[prop].call(element, ...args);\r\n            return (\r\n              result === undefined ?\r\n                proxy :\r\n                adaptedResult(result)\r\n            );\r\n          };\r\n        }\r\n        // Return the wrapped method\r\n        return methodWrapper(element, prop, proxy);\r\n      }\r\n    }\r\n  );\r\n  cache.set(element, proxy);\r\n  return proxy;\r\n};\r\n\r\n/**\r\n *\r\n * @param {Object} element\r\n * @param {string} prop\r\n * @param {Object} parentWrapper\r\n * @param {string} [parentProp]\r\n * @returns {Proxy<function()>}\r\n */\r\nconst methodWrapper = (element, prop, parentWrapper, parentProp) => {\r\n  const propNormalized = prop.replace(/_/g, '-');\r\n  const f              = (...args) => {\r\n    const r = pluginCallback(parentWrapper, parentProp ? `${parentProp}.${prop}` : prop, args);\r\n    if (r !== undefined) {\r\n      return r;\r\n    }\r\n    // Get value\r\n    if (args.length === 0) {\r\n      const result = element.hasAttribute && element.hasAttribute(propNormalized) ?\r\n        element.getAttribute(propNormalized) :\r\n        element[propNormalized];\r\n      return adaptedResult(result);\r\n    }\r\n    // Set value as property\r\n    const value = args[0];\r\n    if (is(element, CSSStyleDeclaration)) {\r\n      element[propNormalized] = value;\r\n      return parentWrapper;\r\n    }\r\n    if (propNormalized in element && !readonlyProp.has(propNormalized)) {\r\n      if (element[propNormalized] === value) {\r\n        return parentWrapper;\r\n      }\r\n      const previousValue = element[propNormalized];\r\n      try {\r\n        element[propNormalized] = value;\r\n      } catch (err) {\r\n        readonlyProp.add(propNormalized);\r\n      }\r\n      if (\r\n        (isType(element[propNormalized], OBJECT) && element[propNormalized] === value) ||\r\n        element[propNormalized] !== previousValue\r\n      ) {\r\n        return parentWrapper;\r\n      }\r\n      readonlyProp.add(propNormalized);\r\n    }\r\n    // Set value as attribute\r\n    if (value !== 0 && !value) {\r\n      element.removeAttribute(propNormalized);\r\n    } else {\r\n      element.setAttribute(propNormalized, isType(value, BOOLEAN) ? '' : String(args));\r\n    }\r\n    return parentWrapper;\r\n  };\r\n  return new Proxy(\r\n    f,\r\n    {\r\n      get (_target, prop2) {\r\n        const result = element[propNormalized][prop2];\r\n        return (\r\n          isType(result, FUNCTION) ?\r\n            (...args) => {\r\n              const r =\r\n                      pluginCallback(parentWrapper, `${prop}.${prop2}`, args) ||\r\n                      result.call(element[propNormalized], ...args);\r\n              return r === undefined ? parentWrapper : r;\r\n            } :\r\n            methodWrapper(element[propNormalized], prop2, parentWrapper, propNormalized)\r\n        );\r\n      },\r\n      set (_target, prop2, value2) {\r\n        element[propNormalized][prop2] = value2;\r\n        return true;\r\n      }\r\n    }\r\n  );\r\n};\r\n\r\n/**\r\n * adaptedResult\r\n * @param {*} result\r\n * @returns {*}\r\n */\r\nconst adaptedResult = (result) => {\r\n  return (\r\n    is(result, HTMLCollection) || is(result, NodeList) ?\r\n      [...result].map(x => wrapper(x)) :\r\n      is(result, SVGElement) ?\r\n        wrapper(result) :\r\n        isType(result, STRING) ?\r\n          result === '' || Number.isNaN(Number(result)) ?\r\n            result :\r\n            Number(result) :\r\n          result\r\n  );\r\n};\r\n\r\n/**\r\n * pluginCallback\r\n * @param {Object} wrapped\r\n * @param {string} prop\r\n * @param {Array} args\r\n */\r\nconst pluginCallback = (wrapped, prop, args) => {\r\n  if (wrapped._call) {\r\n    return wrapped._call(wrapped, prop, args);\r\n  }\r\n};\r\n\r\n/**\r\n * pluginCallbackPathD\r\n * @param {Object} wrapped\r\n * @param {string} prop\r\n * @param {Array} args\r\n */\r\nconst pluginCallbackPathD = (wrapped, prop, args) => {\r\n  if (wrapped._d) {\r\n    return wrapped._d(wrapped, prop, args);\r\n  }\r\n};\r\n\r\n/**\r\n * @typedef {function} gySVG\r\n */\r\n\r\n/**\r\n * gySVG\r\n * @param {Object|gySVGObject|string} [el]\r\n * @returns {gySVGObject|Object|null}\r\n * @constructor\r\n */\r\nexport function gySVG (el) {\r\n  pluginCallback(gySVG, EMPTY_STRING, [el]);\r\n  return createWrap(isType(el, UNDEFINED) ? SVG : el);\r\n}\r\n\r\nexport default gySVG;\r\n\r\n/**\r\n * gySVG.isWrapped()\r\n * @type {function({Object}) : boolean}\r\n */\r\ngySVG.isWrapped = isWrapped;\r\n\r\n/**\r\n * gySVG.extend\r\n * @param {Function} plugin\r\n * @return {gySVG}\r\n */\r\ngySVG.extend = (plugin) => {\r\n  plugin(gySVG, GYSVGObject);\r\n  return gySVG;\r\n}\r\n\r\n\r\n", "import gySVG from '../src/index.js';\r\n\r\n(typeof gobalThis !== 'undefined' ? globalThis : window).gySVG = gySVG;"],
  "mappings": "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",
  "names": []
}
