{
  "version": 3,
  "sources": ["../../src/svg/src/helpers.plugin.js", "../../src/svg/build/helpers.plugin.js"],
  "sourcesContent": ["/**\r\n * Convert an angle from degrees to radians\r\n * @param {number} degrees\r\n * @returns {number}\r\n */\r\nfunction degrees2radians (degrees) {\r\n  return ((degrees - 90) * Math.PI) / 180.0;\r\n}\r\n\r\n/**\r\n * Return an x, y coordinates from an angular reference\r\n * @param {number} centerX\r\n * @param {number} centerY\r\n * @param {number} radius\r\n * @param {number} angleDegrees\r\n * @returns {{x : *, y : *}}\r\n */\r\nfunction polar2cartesian (centerX, centerY, radius, angleDegrees) {\r\n  const angleRadians = degrees2radians(angleDegrees);\r\n  return {\r\n    x: centerX + radius * Math.cos(angleRadians),\r\n    y: centerY + radius * Math.sin(angleRadians)\r\n  };\r\n}\r\n\r\n/**\r\n * Create an arc path\r\n * @param {number} x\r\n * @param {number} y\r\n * @param {number} radius\r\n * @param {number} startAngle\r\n * @param {number} endAngle\r\n * @return {string}\r\n */\r\nfunction arc (x, y, radius, startAngle, endAngle) {\r\n  const start        = polar2cartesian(x, y, radius, endAngle);\r\n  const end          = polar2cartesian(x, y, radius, startAngle);\r\n  const largeArcFlag = endAngle - startAngle <= 180 ? '0' : '1';\r\n  return `M${start.x},${start.y}A${radius},${radius},0,${largeArcFlag},0,${end.x},${end.y}`;\r\n}\r\n\r\n/**\r\n * Create an arched bar shape with a path\r\n * @param {number} x\r\n * @param {number} y\r\n * @param {number} radius\r\n * @param {number} width\r\n * @param {number} startAngle\r\n * @param {number} endAngle\r\n * @returns {string}\r\n */\r\nfunction barArc (x, y, radius, width, startAngle, endAngle) {\r\n  const externalStart = polar2cartesian(x, y, radius, endAngle);\r\n  const externalEnd   = polar2cartesian(x, y, radius, startAngle);\r\n  const internalStart = polar2cartesian(x, y, radius - width, startAngle);\r\n  const internalEnd   = polar2cartesian(x, y, radius - width, endAngle);\r\n  const flag  = endAngle - startAngle <= 180 ? '0' : '1';\r\n  return `M${externalStart.x},${externalStart.y}` +\r\n         `A${radius},${radius},0,${flag},0,${externalEnd.x},${externalEnd.y}` +\r\n         `L${internalStart.x},${internalStart.y}` +\r\n         `A${radius - width},${radius - width},0,${flag},1,${internalEnd.x},${internalEnd.y}` +\r\n         `Z`;\r\n}\r\n\r\nconst shapes = {\r\n  arc,\r\n  barArc\r\n};\r\n\r\nexport default function helpersPlugin (gySVG, gySVGObj) {\r\n  Object.assign(gySVG, {\r\n    polar2cartesian,\r\n    degrees2radians\r\n  });\r\n  const prevCall = gySVGObj.prototype._d;\r\n  Object.assign(gySVGObj.prototype, {\r\n    _d (wrapped, prop, args) {\r\n      return shapes[prop] ? shapes[prop](...args) : prevCall && prevCall(wrapped, prop, args);\r\n    }\r\n  });\r\n}", "import plugin from '../src/helpers.plugin.js';\r\n\r\n(typeof gobalThis !== 'undefined' ? globalThis : window).gySVG.extend (plugin);\r\n"],
  "mappings": "MAKA,WAA0B,GACxB,MAAS,GAAU,IAAM,KAAK,GAAM,IAWtC,WAA0B,EAAS,EAAS,EAAQ,GAClD,KAAM,GAAe,EAAgB,GACrC,MAAO,CACL,EAAG,EAAU,EAAS,KAAK,IAAI,GAC/B,EAAG,EAAU,EAAS,KAAK,IAAI,IAanC,WAAc,EAAG,EAAG,EAAQ,EAAY,GACtC,KAAM,GAAe,EAAgB,EAAG,EAAG,EAAQ,GAC7C,EAAe,EAAgB,EAAG,EAAG,EAAQ,GAC7C,EAAe,EAAW,GAAc,IAAM,IAAM,IAC1D,MAAO,IAAI,EAAM,KAAK,EAAM,KAAK,KAAU,OAAY,OAAkB,EAAI,KAAK,EAAI,IAaxF,WAAiB,EAAG,EAAG,EAAQ,EAAO,EAAY,GAChD,KAAM,GAAgB,EAAgB,EAAG,EAAG,EAAQ,GAC9C,EAAgB,EAAgB,EAAG,EAAG,EAAQ,GAC9C,EAAgB,EAAgB,EAAG,EAAG,EAAS,EAAO,GACtD,EAAgB,EAAgB,EAAG,EAAG,EAAS,EAAO,GACtD,EAAQ,EAAW,GAAc,IAAM,IAAM,IACnD,MAAO,IAAI,EAAc,KAAK,EAAc,KACjC,KAAU,OAAY,OAAU,EAAY,KAAK,EAAY,KAC7D,EAAc,KAAK,EAAc,KACjC,EAAS,KAAS,EAAS,OAAW,OAAU,EAAY,KAAK,EAAY,KAI1F,KAAM,GAAS,CACb,MACA,UAGa,WAAwB,EAAO,GAC5C,OAAO,OAAO,EAAO,CACnB,kBACA,oBAEF,KAAM,GAAW,EAAS,UAAU,GACpC,OAAO,OAAO,EAAS,UAAW,CAChC,GAAI,EAAS,EAAM,GACjB,MAAO,GAAO,GAAQ,EAAO,GAAM,GAAG,GAAQ,GAAY,EAAS,EAAS,EAAM,MC3ExF,AAAC,OAAO,YAAc,YAAc,WAAa,QAAQ,MAAM,OAAQ",
  "names": []
}
