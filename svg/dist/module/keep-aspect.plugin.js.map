{
  "version": 3,
  "sources": ["../../src/svg/src/resize-observer.plugin.js", "../../src/svg/src/style-observer.plugin.js", "../../src/svg/src/keep-aspect.plugin.js", "../../src/svg/keep-aspect.plugin.js"],
  "sourcesContent": ["/**\r\n * This callback is displayed as part of the Requester class.\r\n * @callback resizeObserver~callback\r\n * @param {SVGElement|gySVGObject} svg\r\n * @param {SVGMatrix} currentMatrix\r\n * @param {SVGMatrix} prevMatrix\r\n */\r\n\r\nconst resizeObserverCache = new WeakMap ();\r\n\r\n/**\r\n * keepAspect\r\n * @usage gySVG.extension( keepAspect )\r\n * @type {{keepAspect() : gySVGObject}}\r\n */\r\nexport default function resizeObserverPlugin (gySVG, gySVGObject) {\r\n  // Update gySVGObject\r\n  Object.assign (\r\n    gySVGObject.prototype, {\r\n      resizeObserver (callback) {\r\n        const self = this;\r\n        const svg  = this.el.tagName.toLowerCase () === 'svg' ? this.el : this.parent ('svg').el;\r\n        if (resizeObserverCache.has (svg)) {\r\n          return resizeObserverCache.get (svg).push (callback);\r\n        }\r\n        resizeObserverCache.set (svg, [callback]);\r\n        let prevMatrix = {};\r\n        const check    = () => {\r\n          const currentMatrix = svg.getScreenCTM ();\r\n          if (currentMatrix !== null && (\r\n            currentMatrix.a !== prevMatrix.a ||\r\n            currentMatrix.b !== prevMatrix.b ||\r\n            currentMatrix.c !== prevMatrix.c ||\r\n            currentMatrix.d !== prevMatrix.d ||\r\n            currentMatrix.e !== prevMatrix.e ||\r\n            currentMatrix.f !== prevMatrix.f)\r\n          ) {\r\n            const callbacks = resizeObserverCache.get (svg);\r\n            for (let cb of callbacks) {\r\n              cb (self, currentMatrix, prevMatrix);\r\n            }\r\n            prevMatrix = currentMatrix;\r\n          }\r\n          window.requestAnimationFrame (check);\r\n        };\r\n        check ();\r\n        return self;\r\n      }\r\n    });\r\n}\r\n", "/**\r\n * This callback is displayed as part of the Requester class.\r\n * @callback cssObserver~callback\r\n * @param {SVGElement|gySVGObject} svg\r\n * @param {object} styleValues\r\n */\r\n\r\n/**\r\n * styleObserver\r\n * @usage gySVG.extension( styleObserver )\r\n * @type {{styleObserver() : gySVGObject}}\r\n */\r\nexport default function styleObserverPlugin (gySVG, gySVGObject) {\r\n  // Update gySVGObject\r\n  Object.assign (\r\n    gySVGObject.prototype, {\r\n      styleObserver (properties, callback) {\r\n        const self = this;\r\n        const svg  = this.el.tagName.toLowerCase () === 'svg' ? this.el : this.closest ('svg').el;\r\n        cssObserve(svg, properties, callback);\r\n        return self;\r\n      }\r\n    });\r\n}\r\n\r\n/**\r\n * Observe CSS changes\r\n */\r\nconst TIMEOUT     = 100;\r\nlet requestId     = 0;\r\nlet lastExecution = 0;\r\nlet elements      = new Map ();\r\nlet run           = false;\r\n\r\n/**\r\n * Observe CSS changes\r\n * @param {Object}               element    - HTMLELement to observe\r\n * @param {string|Array<string>} properties - List of CSS property to observe\r\n * @param {Function}             callback   - function called when the CSS is changed\r\n */\r\nfunction cssObserve (element, properties, callback) {\r\n  if (typeof properties === 'string') {\r\n    properties = [properties];\r\n  }\r\n  let observer;\r\n  if (!elements.has (element)) {\r\n    observer = {computedStyles : getComputedStyle (element), styles : {}, keys : []};\r\n    elements.set (element, observer);\r\n  } else {\r\n    observer = elements.get (element);\r\n  }\r\n  for (let property of properties) {\r\n    if (!observer.styles[ property ]) {\r\n      observer.styles[ property ] = {lastValue : observer.computedStyles[ property ], callbacks : new Set ()};\r\n      observer.keys.push (property);\r\n    }\r\n    observer.styles[ property ].callbacks.add (callback);\r\n  }\r\n  observe ();\r\n}\r\n\r\n/**\r\n * function for observe CSS with requestAnimationFrame\r\n * @param {number} [timestamp]\r\n */\r\nfunction observe (timestamp) {\r\n  if (!run || (timestamp - lastExecution < TIMEOUT)) {\r\n    run       = true;\r\n    requestId = window.requestAnimationFrame (observe);\r\n    return;\r\n  }\r\n  if (!timestamp) {\r\n    return;\r\n  }\r\n  lastExecution = timestamp;\r\n  let callbacks = null;\r\n  for (let [element, observer] of elements.entries ()) {\r\n    for (let styleName of observer.keys) {\r\n      const currentStyle = observer.computedStyles.getPropertyValue (styleName);\r\n      const lastStyle    = observer.styles[ styleName ].lastValue;\r\n      if (currentStyle !== lastStyle) {\r\n        if (!callbacks) {\r\n          callbacks = new Map ();\r\n        }\r\n        for (let callback of observer.styles[ styleName ].callbacks) {\r\n          if (callbacks.has (callback)) {\r\n            callbacks.get (callback)[ styleName ] = {\r\n              current : currentStyle,\r\n              last    : lastStyle\r\n            };\r\n          } else {\r\n            callbacks.set (callback, {\r\n              [ styleName ] : {\r\n                current : currentStyle,\r\n                last    : lastStyle\r\n              }\r\n            });\r\n          }\r\n        }\r\n        observer.styles[ styleName ].lastValue = currentStyle;\r\n      }\r\n    }\r\n    if (callbacks) {\r\n      for (let [callback, values] of callbacks.entries ()) {\r\n        callback.call (element, values);\r\n      }\r\n      callbacks = null;\r\n    }\r\n  }\r\n  requestId = window.requestAnimationFrame (observe);\r\n}\r\n", "import installResizeObserver from './resize-observer.plugin.js';\r\nimport installStyleObserver  from './style-observer.plugin.js';\r\n\r\nexport default function keepAspectPlugin (gySVG, gySVGObject) {\r\n\r\n  // Install dependencies\r\n  installResizeObserver(gySVG, gySVGObject);\r\n  installStyleObserver(gySVG, gySVGObject);\r\n\r\n  // Update gySVGObject\r\n  Object.assign(\r\n    gySVGObject.prototype, {\r\n      /**\r\n       * keepAspect\r\n       * @returns {gySVGObject}\r\n       */\r\n      keepAspect () {\r\n        const svg = this.closest('svg');\r\n        switch (this.el.tagName.toLowerCase()) {\r\n          case 'text':\r\n            keepTextAspect(svg, this);\r\n            break;\r\n          case 'line':\r\n            keepLineAspect(svg, this);\r\n            break;\r\n          default:\r\n            keepStrokeAspect(svg, this);\r\n        }\r\n        return this;\r\n      }\r\n    });\r\n}\r\n\r\n/**\r\n *\r\n * @param {gySVGObject} svg\r\n * @param {gySVGObject} shape\r\n */\r\nfunction keepStrokeAspect (svg, shape) {\r\n  let originalCTM     = svg.getScreenCTM() || {a: 1, d: 1};\r\n  let keepStrokeWidth = 0;\r\n  svg.resizeObserver((svg2, currentCTM) => {\r\n    const proportion = Math.max(currentCTM.a / originalCTM.a, currentCTM.d / originalCTM.d);\r\n    shape.stroke_width(keepStrokeWidth / proportion);\r\n  });\r\n  svg.styleObserver('stroke-width', (values) => {\r\n    const currentCTM = svg.getScreenCTM();\r\n    keepStrokeWidth  = Number.parseFloat(values['stroke-width'].current);\r\n    const proportion = Math.max(currentCTM.a / originalCTM.a, currentCTM.d / originalCTM.d);\r\n    shape.stroke_width(keepStrokeWidth / proportion);\r\n  })\r\n}\r\n\r\n/**\r\n *\r\n * @param {gySVGObject} svg\r\n * @param {gySVGObject} text\r\n */\r\nfunction keepTextAspect (svg, text) {\r\n  const originalCTM = svg.getScreenCTM() || {a: 1, d: 1};\r\n  text.el._keepX    = text.x();\r\n  text.el._keepY    = text.y();\r\n  svg.resizeObserver((svg2, currentCTM) => {\r\n    text.transform(`scale( ${originalCTM.a / currentCTM.a}, ${originalCTM.d / currentCTM.d})`);\r\n    text.x(text.el._keepX / (originalCTM.a / currentCTM.a));\r\n    text.y(text.el._keepY / (originalCTM.d / currentCTM.d));\r\n  });\r\n}\r\n\r\n/**\r\n *\r\n * @param {gySVGObject} svg\r\n * @param {gySVGObject} line\r\n */\r\nfunction keepLineAspect (svg, line) {\r\n  const originalCTM = svg.getScreenCTM() || {a: 1, d: 1};\r\n  line.el._keepX1   = line.x1();\r\n  line.el._keepX2   = line.x2();\r\n  line.el._keepY1   = line.y1();\r\n  line.el._keepY2   = line.y2();\r\n  svg.resizeObserver((svg2, currentCTM) => {\r\n    line.transform(`scale( ${originalCTM.a / currentCTM.a}, ${originalCTM.d / currentCTM.d})`);\r\n    line.x1(line.el._keepX1 / (originalCTM.a / currentCTM.a));\r\n    line.x2(line.el._keepX2 / (originalCTM.a / currentCTM.a));\r\n    line.y1(line.el._keepY1 / (originalCTM.d / currentCTM.d));\r\n    line.y2(line.el._keepY2 / (originalCTM.d / currentCTM.d));\r\n  });\r\n}\r\n", "import plugin from './src/keep-aspect.plugin.js';\r\nexport default plugin;"],
  "mappings": "AAQA,KAAM,GAAsB,GAAI,SAOjB,WAA+B,EAAO,GAEnD,OAAO,OACL,EAAY,UAAW,CACrB,eAAgB,GACd,KAAM,GAAO,KACP,EAAO,KAAK,GAAG,QAAQ,gBAAmB,MAAQ,KAAK,GAAK,KAAK,OAAQ,OAAO,GACtF,GAAI,EAAoB,IAAK,GAC3B,MAAO,GAAoB,IAAK,GAAK,KAAM,GAE7C,EAAoB,IAAK,EAAK,CAAC,IAC/B,GAAI,GAAa,GACjB,KAAM,GAAW,KACf,KAAM,GAAgB,EAAI,eAC1B,GAAI,IAAkB,MACpB,GAAc,IAAM,EAAW,GAC/B,EAAc,IAAM,EAAW,GAC/B,EAAc,IAAM,EAAW,GAC/B,EAAc,IAAM,EAAW,GAC/B,EAAc,IAAM,EAAW,GAC/B,EAAc,IAAM,EAAW,IAE/B,KAAM,GAAY,EAAoB,IAAK,GAC3C,OAAS,KAAM,GACb,EAAI,EAAM,EAAe,GAE3B,EAAa,EAEf,OAAO,sBAAuB,IAEhC,WACO,KClCA,WAA8B,EAAO,GAElD,OAAO,OACL,EAAY,UAAW,CACrB,cAAe,EAAY,GACzB,KAAM,GAAO,KACP,EAAO,KAAK,GAAG,QAAQ,gBAAmB,MAAQ,KAAK,GAAK,KAAK,QAAS,OAAO,GACvF,SAAW,EAAK,EAAY,GACrB,KAQf,KAAM,GAAc,IACpB,GAAI,GAAgB,EAChB,EAAgB,EAChB,EAAgB,GAAI,KACpB,EAAgB,GAQpB,WAAqB,EAAS,EAAY,GACxC,AAAI,MAAO,IAAe,UACxB,GAAa,CAAC,IAEhB,GAAI,GACJ,AAAK,EAAS,IAAK,GAIjB,EAAW,EAAS,IAAK,GAHzB,GAAW,CAAC,eAAiB,iBAAkB,GAAU,OAAS,GAAI,KAAO,IAC7E,EAAS,IAAK,EAAS,IAIzB,OAAS,KAAY,GACnB,AAAK,EAAS,OAAQ,IACpB,GAAS,OAAQ,GAAa,CAAC,UAAY,EAAS,eAAgB,GAAY,UAAY,GAAI,MAChG,EAAS,KAAK,KAAM,IAEtB,EAAS,OAAQ,GAAW,UAAU,IAAK,GAE7C,IAOF,WAAkB,GAChB,GAAI,CAAC,GAAQ,EAAY,EAAgB,GACvC,EAAY,GACZ,EAAY,OAAO,sBAAuB,GAC1C,OAEF,GAAI,CAAC,EACH,OAEF,EAAgB,EAChB,GAAI,GAAY,KAChB,OAAS,CAAC,EAAS,IAAa,GAAS,WACvC,OAAS,KAAa,GAAS,MAC7B,KAAM,GAAe,EAAS,eAAe,iBAAkB,GACzD,EAAe,EAAS,OAAQ,GAAY,UAClD,GAAI,IAAiB,GACnB,AAAK,GACH,GAAY,GAAI,MAElB,OAAS,KAAY,GAAS,OAAQ,GAAY,UAChD,AAAI,EAAU,IAAK,GACjB,EAAU,IAAK,GAAW,GAAc,CACtC,QAAU,EACV,KAAU,GAGZ,EAAU,IAAK,EAAU,EACrB,GAAc,CACd,QAAU,EACV,KAAU,KAKlB,EAAS,OAAQ,GAAY,UAAY,GAG7C,GAAI,GACF,OAAS,CAAC,EAAU,IAAW,GAAU,UACvC,EAAS,KAAM,EAAS,GAE1B,EAAY,MAGhB,EAAY,OAAO,sBAAuB,GC1G7B,WAA2B,EAAO,GAG/C,EAAsB,EAAO,GAC7B,EAAqB,EAAO,GAG5B,OAAO,OACL,EAAY,UAAW,CAKrB,aACE,KAAM,GAAM,KAAK,QAAQ,OACzB,OAAQ,KAAK,GAAG,QAAQ,mBACjB,OACH,EAAe,EAAK,MACpB,UACG,OACH,EAAe,EAAK,MACpB,cAEA,EAAiB,EAAK,MAE1B,MAAO,SAUf,WAA2B,EAAK,GAC9B,GAAI,GAAkB,EAAI,gBAAkB,CAAC,EAAG,EAAG,EAAG,GAClD,EAAkB,EACtB,EAAI,eAAe,CAAC,EAAM,KACxB,KAAM,GAAa,KAAK,IAAI,EAAW,EAAI,EAAY,EAAG,EAAW,EAAI,EAAY,GACrF,EAAM,aAAa,EAAkB,KAEvC,EAAI,cAAc,eAAgB,AAAC,IACjC,KAAM,GAAa,EAAI,eACvB,EAAmB,OAAO,WAAW,EAAO,gBAAgB,SAC5D,KAAM,GAAa,KAAK,IAAI,EAAW,EAAI,EAAY,EAAG,EAAW,EAAI,EAAY,GACrF,EAAM,aAAa,EAAkB,KASzC,WAAyB,EAAK,GAC5B,KAAM,GAAc,EAAI,gBAAkB,CAAC,EAAG,EAAG,EAAG,GACpD,EAAK,GAAG,OAAY,EAAK,IACzB,EAAK,GAAG,OAAY,EAAK,IACzB,EAAI,eAAe,CAAC,EAAM,KACxB,EAAK,UAAU,UAAU,EAAY,EAAI,EAAW,MAAM,EAAY,EAAI,EAAW,MACrF,EAAK,EAAE,EAAK,GAAG,OAAU,GAAY,EAAI,EAAW,IACpD,EAAK,EAAE,EAAK,GAAG,OAAU,GAAY,EAAI,EAAW,MASxD,WAAyB,EAAK,GAC5B,KAAM,GAAc,EAAI,gBAAkB,CAAC,EAAG,EAAG,EAAG,GACpD,EAAK,GAAG,QAAY,EAAK,KACzB,EAAK,GAAG,QAAY,EAAK,KACzB,EAAK,GAAG,QAAY,EAAK,KACzB,EAAK,GAAG,QAAY,EAAK,KACzB,EAAI,eAAe,CAAC,EAAM,KACxB,EAAK,UAAU,UAAU,EAAY,EAAI,EAAW,MAAM,EAAY,EAAI,EAAW,MACrF,EAAK,GAAG,EAAK,GAAG,QAAW,GAAY,EAAI,EAAW,IACtD,EAAK,GAAG,EAAK,GAAG,QAAW,GAAY,EAAI,EAAW,IACtD,EAAK,GAAG,EAAK,GAAG,QAAW,GAAY,EAAI,EAAW,IACtD,EAAK,GAAG,EAAK,GAAG,QAAW,GAAY,EAAI,EAAW,MCpF1D,GAAO,GAAQ",
  "names": []
}
