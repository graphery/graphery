{
  "version": 3,
  "sources": ["src/style-observer.plugin.js", "style-observer.plugin.js"],
  "sourcesContent": ["/**\r\n * This callback is displayed as part of the Requester class.\r\n * @callback cssObserver~callback\r\n * @param {SVGElement|gySVGObject} svg\r\n * @param {object} styleValues\r\n */\r\n\r\n/**\r\n * styleObserver\r\n * @usage gySVG.extension( styleObserver )\r\n * @type {{styleObserver() : gySVGObject}}\r\n */\r\nexport default function styleObserverPlugin (gySVG, gySVGObject) {\r\n  // Update gySVGObject\r\n  Object.assign (\r\n    gySVGObject.prototype, {\r\n      styleObserver (properties, callback) {\r\n        const self = this;\r\n        const svg  = this.el.tagName.toLowerCase () === 'svg' ? this.el : this.closest ('svg').el;\r\n        cssObserve(svg, properties, callback);\r\n        return self;\r\n      }\r\n    });\r\n}\r\n\r\n/**\r\n * Observe CSS changes\r\n */\r\nconst TIMEOUT     = 100;\r\nlet requestId     = 0;\r\nlet lastExecution = 0;\r\nlet elements      = new Map ();\r\nlet run           = false;\r\n\r\n/**\r\n * Observe CSS changes\r\n * @param {Object}               element    - HTMLELement to observe\r\n * @param {string|Array<string>} properties - List of CSS property to observe\r\n * @param {Function}             callback   - function called when the CSS is changed\r\n */\r\nfunction cssObserve (element, properties, callback) {\r\n  if (typeof properties === 'string') {\r\n    properties = [properties];\r\n  }\r\n  let observer;\r\n  if (!elements.has (element)) {\r\n    observer = {computedStyles : getComputedStyle (element), styles : {}, keys : []};\r\n    elements.set (element, observer);\r\n  } else {\r\n    observer = elements.get (element);\r\n  }\r\n  for (let property of properties) {\r\n    if (!observer.styles[ property ]) {\r\n      observer.styles[ property ] = {lastValue : observer.computedStyles[ property ], callbacks : new Set ()};\r\n      observer.keys.push (property);\r\n    }\r\n    observer.styles[ property ].callbacks.add (callback);\r\n  }\r\n  observe ();\r\n}\r\n\r\n/**\r\n * function for observe CSS with requestAnimationFrame\r\n * @param {number} [timestamp]\r\n */\r\nfunction observe (timestamp) {\r\n  if (!run || (timestamp - lastExecution < TIMEOUT)) {\r\n    run       = true;\r\n    requestId = window.requestAnimationFrame (observe);\r\n    return;\r\n  }\r\n  if (!timestamp) {\r\n    return;\r\n  }\r\n  lastExecution = timestamp;\r\n  let callbacks = null;\r\n  for (let [element, observer] of elements.entries ()) {\r\n    for (let styleName of observer.keys) {\r\n      const currentStyle = observer.computedStyles.getPropertyValue (styleName);\r\n      const lastStyle    = observer.styles[ styleName ].lastValue;\r\n      if (currentStyle !== lastStyle) {\r\n        if (!callbacks) {\r\n          callbacks = new Map ();\r\n        }\r\n        for (let callback of observer.styles[ styleName ].callbacks) {\r\n          if (callbacks.has (callback)) {\r\n            callbacks.get (callback)[ styleName ] = {\r\n              current : currentStyle,\r\n              last    : lastStyle\r\n            };\r\n          } else {\r\n            callbacks.set (callback, {\r\n              [ styleName ] : {\r\n                current : currentStyle,\r\n                last    : lastStyle\r\n              }\r\n            });\r\n          }\r\n        }\r\n        observer.styles[ styleName ].lastValue = currentStyle;\r\n      }\r\n    }\r\n    if (callbacks) {\r\n      for (let [callback, values] of callbacks.entries ()) {\r\n        callback.call (element, values);\r\n      }\r\n      callbacks = null;\r\n    }\r\n  }\r\n  requestId = window.requestAnimationFrame (observe);\r\n}\r\n", "import plugin from './src/style-observer.plugin.js';\r\nexport default plugin;"],
  "mappings": "AAYe,WAA8B,EAAO,GAElD,OAAO,OACL,EAAY,UAAW,CACrB,cAAe,EAAY,GACzB,KAAM,GAAO,KACP,EAAO,KAAK,GAAG,QAAQ,gBAAmB,MAAQ,KAAK,GAAK,KAAK,QAAS,OAAO,GACvF,SAAW,EAAK,EAAY,GACrB,KAQf,KAAM,GAAc,IACpB,GAAI,GAAgB,EAChB,EAAgB,EAChB,EAAgB,GAAI,KACpB,EAAgB,GAQpB,WAAqB,EAAS,EAAY,GACxC,AAAI,MAAO,IAAe,UACxB,GAAa,CAAC,IAEhB,GAAI,GACJ,AAAK,EAAS,IAAK,GAIjB,EAAW,EAAS,IAAK,GAHzB,GAAW,CAAC,eAAiB,iBAAkB,GAAU,OAAS,GAAI,KAAO,IAC7E,EAAS,IAAK,EAAS,IAIzB,OAAS,KAAY,GACnB,AAAK,EAAS,OAAQ,IACpB,GAAS,OAAQ,GAAa,CAAC,UAAY,EAAS,eAAgB,GAAY,UAAY,GAAI,MAChG,EAAS,KAAK,KAAM,IAEtB,EAAS,OAAQ,GAAW,UAAU,IAAK,GAE7C,IAOF,WAAkB,GAChB,GAAI,CAAC,GAAQ,EAAY,EAAgB,GACvC,EAAY,GACZ,EAAY,OAAO,sBAAuB,GAC1C,OAEF,GAAI,CAAC,EACH,OAEF,EAAgB,EAChB,GAAI,GAAY,KAChB,OAAS,CAAC,EAAS,IAAa,GAAS,WACvC,OAAS,KAAa,GAAS,MAC7B,KAAM,GAAe,EAAS,eAAe,iBAAkB,GACzD,EAAe,EAAS,OAAQ,GAAY,UAClD,GAAI,IAAiB,GACnB,AAAK,GACH,GAAY,GAAI,MAElB,OAAS,KAAY,GAAS,OAAQ,GAAY,UAChD,AAAI,EAAU,IAAK,GACjB,EAAU,IAAK,GAAW,GAAc,CACtC,QAAU,EACV,KAAU,GAGZ,EAAU,IAAK,EAAU,EACrB,GAAc,CACd,QAAU,EACV,KAAU,KAKlB,EAAS,OAAQ,GAAY,UAAY,GAG7C,GAAI,GACF,OAAS,CAAC,EAAU,IAAW,GAAU,UACvC,EAAS,KAAM,EAAS,GAE1B,EAAY,MAGhB,EAAY,OAAO,sBAAuB,GC5G5C,GAAO,GAAQ",
  "names": []
}
